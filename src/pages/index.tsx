import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { api } from "~/utils/api";
// Components
import Header from "~/components/Header.tsx";
import Table from "~/components/Table.tsx";

export default function Home() {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>PyratzCap</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2a66bf] to-[#FFFFFF]">
        <Header></Header>
        <div className="flex flex-col">
          <div>
            <h1>Top 100 des Crypto-monnaies par capilalisation de marché</h1>
            <span>La capitalisation boursièrere globale ...</span>
          </div>
          <div className="flex gap-10">
            <div style={{borderStyle: 'solid', borderColor: 'black', borderWidth: 2}}>Tendances</div>
            <div style={{borderStyle: 'solid', borderColor: 'black', borderWidth: 2}}>NFT in my wallet</div>
            <div style={{borderStyle: 'solid', borderColor: 'black', borderWidth: 2}}>Token in my wallet</div>
          </div>
          <div>
            <div className="flex gap-5">
              <span>Liste de suivi</span>
              <span>Portfolio</span>
              <span>Cryptomonnaies</span>
              <span>Memes</span>
              <span>Bitcoin ecosystem</span>
              <span>Liquid Staking Derivaties</span>
              <span>Metaverse</span>
            </div>
            <Table></Table>
          </div>
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}
